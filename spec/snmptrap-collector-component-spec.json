{
  "self": {
    "version": "1.4.0",
    "name": "snmptrap-collector",
    "description": "Collector for receiving SNMP traps and publishing to DMAAP/MR",
    "component_type": "docker"
  },
  "streams": {
    "subscribes": [],
    "publishes": [
      {
        "format": "snmptrap_output",
        "version": "1.3.0",
        "type": "message router",
        "config_key": "sec_fault_unsecure"
      }
    ]
  },
  "services": {
    "calls": [],
    "provides": []
  },
  "parameters": [
    {
      "name": "sw_interval_in_seconds",
      "value": "60",
      "description": "StormWatch sample interval",
      "designer_editable": false,
      "policy_editable": false,
      "sourced_at_deployment": false
    },
    {
      "name": "StormWatchPolicy",
      "value": "",
      "description": "Configure storm watch control parameters via Policy",
      "sourced_at_deployment": false,
      "designer_editable": true,
      "policy_editable": true,
      "policy_group": "DCAE.Config_StormWatch",
      "policy_schema": [
        {
          "name": "sw_trap_config",
          "description": "List of storm watch control rules",
          "type": "list",
          "entry_schema": [
            {
              "name": "sw_notify_oid",
              "description": "Stormwatch notify oid",
              "type": "string",
              "value": ""
            },
            {
              "name": "sw_high_water_in_interval",
              "description": "Onset number of traps in interval",
              "type": "string",
              "value": ""
            },
            {
              "name": "sw_low_water_in_interval",
              "description": "Clearing number of traps in interval",
              "type": "string",
              "value": ""
            }
          ]
        }
      ]
    },
    {
      "name": "cache",
      "description": "Cache parameters",
      "sourced_at_deployment": true,
      "designer_editable": false,
      "policy_editable": false,
      "value": {
          "dns_cache_ttl_seconds": "60"
          }
    },
    {
      "name": "files",
      "description": "Files parameters",
      "sourced_at_deployment": true,
      "designer_editable": false,
      "policy_editable": false,
      "value": [
        {
          "arriving_traps_log": "snmptrapd_arriving_traps.log",
          "data_dir":  "data",
          "eelf_audit": "audit.log",
          "eelf_base_dir": "/opt/app/snmptrap/logs",
          "eelf_debug": "debug.log",
          "eelf_error": "error.log",
          "eelf_metrics": "metrics.log",
          "log_dir": "logs",
          "minimum_severity_to_log": "2",
          "perm_status_file": "snmptrapd_status.log",
          "pid_dir": "tmp",
          "roll_frequency": "day",
          "runtime_base_dir": "/opt/app/snmptrap",
          "snmptrapd_diag": "snmptrapd_prog_diag.log",
          "traps_stats_log": "snmptrapd_stats.csv"
        }
      ]
    },
    {
      "name": "publisher",
      "description": "Publisher parameters",
      "sourced_at_deployment": true,
      "designer_editable": false,
      "policy_editable": false,
      "value": [
        {
          "http_milliseconds_between_retries": "750",
          "http_peer_publisher": "unavailable",
          "http_primary_publisher": "true",
          "http_retries": "3",
          "http_milliseconds_timeout": "1500",
          "max_milliseconds_between_publishes": "10000",
          "max_traps_between_publishes": "10"
        }
      ]
    },
    {
      "name": "protocols",
      "description": "Protocol parameters",
      "sourced_at_deployment": true,
      "designer_editable": false,
      "policy_editable": false,
      "value": [
        {
          "ipv4_interface": "0.0.0.0",
          "ipv4_port": "6162",
          "ipv6_interface": "::1",
          "ipv6_port": "6162"
        }
      ]
    },
    {
      "name": "snmptrapd",
      "description": "application basics",
      "sourced_at_deployment": true,
      "designer_editable": false,
      "policy_editable": false,
      "value": [
        {
          "version": "1.4.0",
          "title": "Collector for receiving SNMP traps and publishing to DMAAP/MR"
        }
      ]
    }
  ],
  "auxilary": {
    "healthcheck": {
      "type": "docker",
      "interval": "300s",
      "timeout": "120s",
      "script": "/opt/app/snmptrap/bin/snmptrapd.sh status"
    },
    "reconfigs": {
      "dti": "/opt/app/snmptrap/bin/snmptrapd.sh reloadCfg"
    },
    "ports": [
      "6162/udp:162"
    ]
  },
  "artifacts": [
    {
      "type": "docker image",
      "uri": "nexus01.research.att.com:18443/dcae-platform/snmptrap:1.4.0"
    }
  ]
}
